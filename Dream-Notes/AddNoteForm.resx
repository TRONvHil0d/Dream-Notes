<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="loginPic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <data name="loginMinimze.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAT
        rwAAE68BY+aOwwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAABKSURBVFhH7dHB
        CQAhDETRgM1pARa0WrhO7i5EcU/7H/zrINEAAMCLpIqql/It3wzralyuqbAvHvCoMD9XVqtznuRbW18A
        AMBfmE1iAjcECeRzrwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="loginClose.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADYSURBVFhH7ZZL
        DsIwDERzIjgNsOezgKMBV+QzU8lSFIKx06Rs/KRRm1YZT9REdQqCQGEN3aHtNGpjB9GDXm448QU9oAMf
        ODlCnEuPKx944crFgFcaWsmL87qBmthDYvSEztAvWuaolIYX6BvdiwuWEMOKC1qI4cWFWojFigvlDs/v
        PSdlFvmqF1t5Ti2Adjq68tdPUNtwtY05BG23a++6YCkwLITHuHuI0tDyfbuFKH/HJ8hKeVKampobJKvw
        FBfYxEiIpoaEbRRDzGnJ2Iiw+GoaBUHwQUpvrF+CH4/GxMQAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISEhLyIiImIjIyM7KysrDAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgGCMjIzslJSUpAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICAjJDDwJSpf9CMlOPIjJCb7IiUy1yQm
        NJQjIyNIHh4eESQkJCMkJCRGIiYmah8yN5ofNDjDIS8z4iEqLPUfNDjwG0VR7yAuMfQiIiJMAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyMmUSQtgPglM7f/JDGe/yI0
        f/8iLkn/IyQm/yErNf4eO0z5Gk5i9BVkfPUPe5b9C5Cy/weiyf8DtOD/AMDw/wDA8P8AwPD/DoKf/yEs
        L6MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIiIiNR8zN2oePUaaHUBKuhtHUcoaSljcGVN0/xVn
        jP8Og6X/CJq//wSs1v8Bvez/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8Jlrn/IS4yywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxGTpoMh6b2BqTM/wK24/8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/A7Db/xFyiv8iJSj8IyZBxSQmO5whJCdjIiIiNS4uLgsAAAAAGFRitgDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/Arfk/xJyiv8PfJf/Arfk/yIkJv8lNdP/JTO2/yUuifkkKFjrJCUx8SIkL3gaSlSmAMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wmVuP8OgZ7/ArXi/wDA8P8Jmb3/Iics/yU0wv8lNtn/JTbZ/yU22f8lNML/IyQs6x1D
        ToYDteH/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AL7u/wDA8P8Hosn/E2yC/weiyf8ePE3/JTGr/yU22f8lNtn/JTbZ/yUx
        q/8iJDDQHjc6VAehx/8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8Buej/D3uW/w6Dof8Bvu3/Arfl/x1ATf8kL5T/JTbZ/yU2
        2f8lNtn/JC2H/iMjLJgkJCQqC4qp9ADA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wqTtf8Buun/AL7t/w2Fo/8Pf5v/FGd9/yQu
        fv8lNtn/JTbZ/yU22f8kKVvzIyMjYBoaGgoScYrjAMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wWo0P8UZ3z/B6HI/wDA
        8P8ScIj/IjBo/yU22f8lNtn/JTbZ/yQlNvIhISEuAAAAABRledUAwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8MjKz/DI2t/wC/
        7/8DsNv/EHaP/xB5k/8hMFL/JTbZ/yU22f8lNc//JCQn+kBAQAQAAAAAFlxvxADA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wG7
        6f8AwPD/DoOh/xFzi/8BvOr/C4+w/yErO/8lNtn/JTbZ/yUyrP8iJC/XAAAAAAAAAAAYVGSzAMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/A7Tg/xF2j/8Hocf/A7Ld/xJuhf8KkrP/IiUn/yU11v8lNtn/JC6I/yQlLZ4AAAAAAAAAABtK
        VaIAwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wG86/8LkbP/AL7u/wuNrv8SbYT/Arfk/wakzP8iKC3/JTTD/yU22f8kKl/0JCQkZAAA
        AAAAAAAAHEJMgAOz3/8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wC+7v8Og6D/B57E/wK04f8TbYT/DIqq/x1BU/8lMq3/JTbZ/yMm
        OvEkJCQxAAAAAAAAAAAhNDhOB5/F/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8Jl7r/EXSN/wO14f8Gps7/HT9L/yUv
        l/8lNtX/IyMn+CsrKwYAAAAAAAAAACIiIiUNiKjxAMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wSt1/8CuOb/EnCI/w6C
        n/8ScYn/Iy6A/yQyuf8iJTHXAAAAAAAAAAAAAAAAJCQkBxJwiOEAwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wuP
        sP8Ct+X/AMDw/w2Hpf8hMWr/JC+Y/yIjL5cAAAAAAAAAAAAAAAAAAAAAFWV50gDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/CJvA/yEyVf8lLHTzIiIiUwAAAAAAAAAAAAAAAAAAAAAXXnDAAMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/Arnn/xB5lP8WYHL/D3uW/wK4
        5v8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8DsNv/IS0+/yQoTegnJycaAAAAAAAAAAAAAAAAAAAAABlU
        Y7AAwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wK66P8dQEn/F1lq/wyK
        qv8RdI3/G0dS/wG56P8AwPD/AMDw/wDA8P8AwPD/AMDw/wC/7/8iKS//IyU84QAAAAAAAAAAAAAAAAAA
        AAAAAAAAGklUngC/7/8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/D36a/xpK
        Vv8Av+//AMDw/wDA8P8MiKf/DoCc/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/x80Q/8jJjzCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAbQUt6A7Ld/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8UZHj/EXWO/wDA8P8AwPD/AMDw/wK14v8UaHz/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/HEhf/yIk
        O34AAAAAAAAAAAAAAAAAAAAAAAAAACAvNkcIn8T+AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/xRofP8PfZj/AMDw/wDA8P8AwPD/Ab7t/xNpfv8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8WYHr+IiIiWQAAAAAAAAAAAAAAAAAAAAAAAAAAJiYmIg2GpO4AwPD/AMDw/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/CJ/E/wWo0f8AwPD/AMDw/wDA8P8AwPD/EnGJ/wDA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/w96lv4jJyl1AAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMFEm2D4ADA8P8AwPD/AMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8Qdo//AMDw/wDA
        8P8AwPD/A7Pf/wifxP8MiKf/HENR+SIlJVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVY3bRAMDw/wDA
        8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/AMDw/wDA8P8AwPD/Ab3s/wWq0/8Klbf/D32b/xtE
        VP8bSWL/HzhM/yAyR/8gM1P/ITRo/yIzef8kJjrJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZZ
        asEAwPD/AMDw/wDA8P8AwPD/AMDw/wK14v8Hocf/DIqp+hFvhuoXVWXlHj1T+SEuO/4iKDL/ITRk/yM0
        h/8lMJz/JCx3/yU0x/8lNtj/JTbZ/yU22f8lNtn/JTKt/yMlOJEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAG0RNhBNsguIVZHfeF1dn0hpPXMUcRE64HT5GoR42PHciIiJKJCQkKysrKwwkJCRjIyMlvCMl
        N6YjJDDgJCQs9CImRO0kKFT6JC+W/yUzuv8lNdb/JTbZ/yU22f8kLHz2JCQmXQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAJycnDUBAQAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoa
        GgojIyO8IiIiLQAAAAAfHx8ZIyMjpyMjJX0jIy68JCQr6yMjJ/ojJkTwJCtr9iMlL/ImJiYiAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACQkJA4jIyN7JCQkiCQkJHkmJiYUAAAAAAAAAAAAAAAAIiIiDyIiIjwjIyNnJCQkOAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/h/8f/wAAD/8AAA/AAAAPwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAAAAAgAAAAYAAAAGAAAABgAAAAYAAAAGAAAADgAAAA8AAAAPAAAADwAAAB8AAAAfAAAAHwAAAB8AA
        AAfAAAAH4AAAD+AAAA/gAAAP8/xAD//+Dh8=
</value>
  </data>
</root>